name: ci

on:
  push:
    branches:
      - 'beihai'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: openv2x/hippocampus:beihai
          build-args: |
            GIT_BRANCH=${{ github.ref_name }}
            REPO_URL=https://github.com/open-v2x/hippocampus
            GIT_COMMIT=${{ github.sha }}

  acr:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: sync image to ACR
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.FQ_HOST }}
          username: ${{ secrets.FQ_USERNAME }}
          key: ${{ secrets.FQ_KEY }}
          port: ${{ secrets.FQ_PORT }}
          script: |
            set -e

            (docker images | grep none | awk '{print $3}' | xargs -I{} docker rmi -f {}) || true
            docker pull openv2x/hippocampus:beihai
            docker tag openv2x/hippocampus:beihai registry.cn-shanghai.aliyuncs.com/openv2x/hippocampus:beihai
            docker push registry.cn-shanghai.aliyuncs.com/openv2x/hippocampus:beihai

  ssh:
    needs: acr
    runs-on: ubuntu-latest
    steps:
      - name: apply to cicd environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LAB_HOST }}
          username: ${{ secrets.LAB_USERNAME }}
          password: ${{ secrets.LAB_PASSWORD }}
          port: ${{ secrets.LAB_PORT }}
          script: |
            set -e
          
            rm -rf /tmp/config
            mkdir /tmp/config && cd /tmp/config
            wget https://raw.githubusercontent.com/open-v2x/hippocampus/beihai/config/default.yml
            wget https://raw.githubusercontent.com/open-v2x/hippocampus/beihai/config/lalserver.conf.json
            container_names=(`cat default.yml | grep "container_name" | awk '{print $3}'`)
            cameras=(`cat default.yml | grep "camera_id" | awk '{print $3}'`)
            rtsp_urls=(`cat default.yml | grep "rtsp" | awk '{print $3}'`)
          
            containers=(rtsp_simulator lalserver)
            to_delete=(${containers[@]}  ${container_names[@]})
            for i in ${to_delete[@]}; do
              docker stop $i 2>/dev/null || true
              docker rm $i 2>/dev/null || true
            done
            docker rmi registry.cn-shanghai.aliyuncs.com/openv2x/hippocampus:beihai || true
            docker images | grep none | awk '{print $3}' | xargs -I{} docker rmi -f {}
          
            docker run -d -p 1935:1935 -p 7001:8080 --restart=always --name=lalserver -v /tmp/config/lalserver.conf.json:/lal/conf/lalserver.conf.json q191201771/lal /lal/bin/lalserver -c /lal/conf/lalserver.conf.json

            # openv2x/rtsp_simulator:latest
            docker run -d -e SOURCE_URL=/tmp/workdir/test.mp4 -v ~/Videos/test.mp4:/tmp/workdir/test.mp4 --restart=always --name=rtsp_simulator --net=host openv2x/rtsp_simulator:latest

            docker pull registry.cn-shanghai.aliyuncs.com/openv2x/hippocampus-base:beihai
            docker pull registry.cn-shanghai.aliyuncs.com/openv2x/hippocampus:beihai
            for((i=0;i<${#cameras[@]};i++)); do
              nvidia-docker run -d --restart=always --name=${container_names[i]} -e camera_id=${cameras[i]} -e rtsp=${rtsp_urls[i]} --gpus all --net=host registry.cn-shanghai.aliyuncs.com/openv2x/hippocampus:beihai
            done

  aio-beihai-ssh:
    needs: acr
    runs-on: ubuntu-latest
    steps:
      - name: apply to beihai aio env
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AIO_ALBANY_HOST }}
          username: ${{ secrets.AIO_ALBANY_USERNAME }}
          key: ${{ secrets.AIO_ALBANY_KEY }}
          port: ${{ secrets.AIO_ALBANY_PORT }}
          script: |
            set -e
            rm -rf openv2x-aio-beihai.tar.gz && wget https://openv2x.oss-ap-southeast-1.aliyuncs.com/deploy/beihai/openv2x-aio-beihai.tar.gz
            rm -rf src && tar zxvf openv2x-aio-beihai.tar.gz
            cd src
            sh install.sh