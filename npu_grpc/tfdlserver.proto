// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package tfdlserver;

service TFDLServer {
  // Sends a network forward request
  rpc forward (ForwardRequest) returns (ForwardResponse) {}
}

// TensorData
message TensorData {
  repeated int32 shape = 1;           /// tensor 的形状, e.g. [1, 3, 10, 10]
  repeated float data = 2;            /// tensor 的数据，按照维度依次展开, data.size() == shape.volum()
}

// 一次推理请求
message ForwardRequest {
    string model = 1;                 /// 推理模型名称, 目前支持 deepsort_fp32 , deepsort_int8, yolov5s_fp32, yolov5s_int8 四个模型
    string id = 2;                    /// 推理任务id, 随机生成一个即可, 不填也可以
    repeated TensorData input = 3;    /// 输入, input.size() = 1 表示单次推理，input.size() > 1 表示batch推理, max batch size = 8
}

// 一次推理请求的访问结果
message ForwardResponse {
  string model = 1;                 /// 推理模型名称
  string id = 2;                    /// 推理任务id, 返回会和request id 相同
  repeated TensorData output = 4;   /// 输出 , output.size() == input.size()
}